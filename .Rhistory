ggplot(trafego, velocidade)
correlacao = cor(dados$Sp500, dados$IBM)
print(paste("Coeficiente de Correlação (r):", round(correlacao, 4)))
media_sp500 = mean(dados$Sp500)
mediana_sp500 = median(dados$Sp500)
desvio_padrao_sp500 = sd(dados$Sp500)
variancia_sp500 = var(dados$Sp500)
minimo_sp500 = min(dados$Sp500)
maximo_sp500 = max(dados$Sp500)
media_ibm = mean(dados$IBM)
mediana_ibm = median(dados$IBM)
desvio_padrao_ibm = sd(dados$IBM)
variancia_ibm = var(dados$IBM)
minimo_ibm = min(dados$IBM)
maximo_ibm = max(dados$IBM)
print("Medidas para o S&P 500:")
print(paste("Média:", round(media_sp500, 4)))
print(paste("Mediana:", round(mediana_sp500, 4)))
print(paste("Desvio Padrão:", round(desvio_padrao_sp500, 4)))
print(paste("Variância:", round(variancia_sp500, 4)))
library(ggplot2)
dados = data.frame(
Sp500 = c(1.2, -2.5, -3.0, 2.0, 5.0, 1.2, 3.0, -1.0, 0.5, 2.5),
IBM = c(-0.7, -2.0, -5.5, 4.7, 1.8, 4.1, 2.6, 2.0, -1.3, 5.5)
)
#Passo 1:
grafico_dispersao = ggplot(data = dados, aes(x = Sp500, y = IBM)) +
geom_point() +
labs(x = "S&P 500", y = "IBM") +
ggtitle("Gráfico de Dispersão: S&P 500 x IBM")
print(grafico_dispersao)
#Passo 2:
modelo_regressao = lm(IBM ~ Sp500, data = dados)
summary(modelo_regressao)
#Passo 3:
modelo_regressao = lm(IBM ~ Sp500, data = dados)
resumo = summary(modelo_regressao)
r_squared = resumo$r.squared
print(paste("Coeficiente de Determinação (R²):", round(r_squared, 4)))
#Passo 4:
correlacao = cor(dados$Sp500, dados$IBM)
print(paste("Coeficiente de Correlação (r):", round(correlacao, 4)))
#Passo 5:
media_sp500 = mean(dados$Sp500)
mediana_sp500 = median(dados$Sp500)
desvio_padrao_sp500 = sd(dados$Sp500)
variancia_sp500 = var(dados$Sp500)
minimo_sp500 = min(dados$Sp500)
maximo_sp500 = max(dados$Sp500)
media_ibm = mean(dados$IBM)
mediana_ibm = median(dados$IBM)
desvio_padrao_ibm = sd(dados$IBM)
variancia_ibm = var(dados$IBM)
minimo_ibm = min(dados$IBM)
maximo_ibm = max(dados$IBM)
print("Medidas para o S&P 500:")
print(paste("Média:", round(media_sp500, 4)))
print(paste("Mediana:", round(mediana_sp500, 4)))
print(paste("Desvio Padrão:", round(desvio_padrao_sp500, 4)))
print(paste("Variância:", round(variancia_sp500, 4)))
print(paste("Mínimo:", round(minimo_sp500, 4)))
print(paste("Máximo:", round(maximo_sp500, 4)))
print("Medidas para a IBM:")
print(paste("Média:", round(media_ibm, 4)))
print(paste("Mediana:", round(mediana_ibm, 4)))
print(paste("Desvio Padrão:", round(desvio_padrao_ibm, 4)))
print(paste("Variância:", round(variancia_ibm, 4)))
print(paste("Mínimo:", round(minimo_ibm, 4)))
print(paste("Máximo:", round(maximo_ibm, 4)))
#Passo 6:
boxplot_grafico = ggplot(data = dados, aes(y = IBM, x = Sp500)) +
geom_boxplot() +
labs(x = "S&P 500", y = "IBM") +
ggtitle("Diagrama de Box Plot: S&P 500 e IBM")
print(boxplot_grafico)
library(ggplot2)
dados = data.frame(
Sp500 = c(1.2, -2.5, -3.0, 2.0, 5.0, 1.2, 3.0, -1.0, 0.5, 2.5),
IBM = c(-0.7, -2.0, -5.5, 4.7, 1.8, 4.1, 2.6, 2.0, -1.3, 5.5)
)
#Passo 1:
grafico_dispersao = ggplot(data = dados, aes(x = Sp500, y = IBM)) +
geom_point() +
labs(x = "S&P 500", y = "IBM") +
ggtitle("Gráfico de Dispersão: S&P 500 x IBM")
print(grafico_dispersao)
#Passo 2:
modelo_regressao = lm(IBM ~ Sp500, data = dados)
summary(modelo_regressao)
#Passo 3:
modelo_regressao = lm(IBM ~ Sp500, data = dados)
resumo = summary(modelo_regressao)
r_squared = resumo$r.squared
print(paste("Coeficiente de Determinação (R²):", round(r_squared, 4)))
#Passo 4:
correlacao = cor(dados$Sp500, dados$IBM)
print(paste("Coeficiente de Correlação (r):", round(correlacao, 4)))
#Passo 5:
media_sp500 = mean(dados$Sp500)
mediana_sp500 = median(dados$Sp500)
desvio_padrao_sp500 = sd(dados$Sp500)
variancia_sp500 = var(dados$Sp500)
minimo_sp500 = min(dados$Sp500)
maximo_sp500 = max(dados$Sp500)
media_ibm = mean(dados$IBM)
mediana_ibm = median(dados$IBM)
desvio_padrao_ibm = sd(dados$IBM)
variancia_ibm = var(dados$IBM)
minimo_ibm = min(dados$IBM)
maximo_ibm = max(dados$IBM)
print("Medidas para o S&P 500:")
print(paste("Média:", round(media_sp500, 4)))
print(paste("Mediana:", round(mediana_sp500, 4)))
print(paste("Desvio Padrão:", round(desvio_padrao_sp500, 4)))
print(paste("Variância:", round(variancia_sp500, 4)))
print(paste("Mínimo:", round(minimo_sp500, 4)))
print(paste("Máximo:", round(maximo_sp500, 4)))
print("Medidas para a IBM:")
print(paste("Média:", round(media_ibm, 4)))
print(paste("Mediana:", round(mediana_ibm, 4)))
print(paste("Desvio Padrão:", round(desvio_padrao_ibm, 4)))
print(paste("Variância:", round(variancia_ibm, 4)))
print(paste("Mínimo:", round(minimo_ibm, 4)))
print(paste("Máximo:", round(maximo_ibm, 4)))
#Passo 6:
boxplot_grafico = ggplot(data = dados, aes(y = IBM, x = Sp500)) +
geom_boxplot() +
labs(x = "S&P 500", y = "IBM") +
ggtitle("Diagrama de Box Plot: S&P 500 e IBM")
print(boxplot_grafico)
library(ggplot2)
dados = data.frame(
Sp500 = c(1.2, -2.5, -3.0, 2.0, 5.0, 1.2, 3.0, -1.0, 0.5, 2.5),
IBM = c(-0.7, -2.0, -5.5, 4.7, 1.8, 4.1, 2.6, 2.0, -1.3, 5.5)
)
#Passo 1:
grafico_dispersao = ggplot(data = dados, aes(x = Sp500, y = IBM)) +
geom_point() +
labs(x = "S&P 500", y = "IBM") +
ggtitle("Gráfico de Dispersão: S&P 500 x IBM")
print(grafico_dispersao)
#Passo 2:
modelo_regressao = lm(IBM ~ Sp500, data = dados)
summary(modelo_regressao)
#Passo 3:
modelo_regressao = lm(IBM ~ Sp500, data = dados)
resumo = summary(modelo_regressao)
r_squared = resumo$r.squared
print(paste("Coeficiente de Determinação (R²):", round(r_squared, 4)))
#Passo 4:
correlacao = cor(dados$Sp500, dados$IBM)
print(paste("Coeficiente de Correlação (r):", round(correlacao, 4)))
#Passo 5:
media_sp500 = mean(dados$Sp500)
mediana_sp500 = median(dados$Sp500)
desvio_padrao_sp500 = sd(dados$Sp500)
variancia_sp500 = var(dados$Sp500)
minimo_sp500 = min(dados$Sp500)
maximo_sp500 = max(dados$Sp500)
media_ibm = mean(dados$IBM)
mediana_ibm = median(dados$IBM)
desvio_padrao_ibm = sd(dados$IBM)
variancia_ibm = var(dados$IBM)
minimo_ibm = min(dados$IBM)
maximo_ibm = max(dados$IBM)
print("Medidas para o S&P 500:")
print(paste("Média:", round(media_sp500, 4)))
print(paste("Mediana:", round(mediana_sp500, 4)))
print(paste("Desvio Padrão:", round(desvio_padrao_sp500, 4)))
print(paste("Variância:", round(variancia_sp500, 4)))
print(paste("Mínimo:", round(minimo_sp500, 4)))
print(paste("Máximo:", round(maximo_sp500, 4)))
print("Medidas para a IBM:")
print(paste("Média:", round(media_ibm, 4)))
print(paste("Mediana:", round(mediana_ibm, 4)))
print(paste("Desvio Padrão:", round(desvio_padrao_ibm, 4)))
print(paste("Variância:", round(variancia_ibm, 4)))
print(paste("Mínimo:", round(minimo_ibm, 4)))
print(paste("Máximo:", round(maximo_ibm, 4)))
#Passo 6:
boxplot_grafico = ggplot(data = dados, aes(y = IBM, x = Sp500)) +
geom_boxplot() +
labs(x = "S&P 500", y = "IBM") +
ggtitle("Diagrama de Box Plot: S&P 500 e IBM")
print(boxplot_grafico)
library(ggplot2)
dados = data.frame(
Sp500 = c(1.2, -2.5, -3.0, 2.0, 5.0, 1.2, 3.0, -1.0, 0.5, 2.5),
IBM = c(-0.7, -2.0, -5.5, 4.7, 1.8, 4.1, 2.6, 2.0, -1.3, 5.5)
)
#Passo 1:
grafico_dispersao = ggplot(data = dados, aes(x = Sp500, y = IBM)) +
geom_point() +
labs(x = "S&P 500", y = "IBM") +
ggtitle("Gráfico de Dispersão: S&P 500 x IBM")
print(grafico_dispersao)
#Passo 2:
modelo_regressao = lm(IBM ~ Sp500, data = dados)
summary(modelo_regressao)
#Passo 3:
modelo_regressao = lm(IBM ~ Sp500, data = dados)
resumo = summary(modelo_regressao)
r_squared = resumo$r.squared
print(paste("Coeficiente de Determinação (R²):", round(r_squared, 4)))
#Passo 4:
correlacao = cor(dados$Sp500, dados$IBM)
print(paste("Coeficiente de Correlação (r):", round(correlacao, 4)))
#Passo 5:
media_sp500 = mean(dados$Sp500)
mediana_sp500 = median(dados$Sp500)
desvio_padrao_sp500 = sd(dados$Sp500)
variancia_sp500 = var(dados$Sp500)
minimo_sp500 = min(dados$Sp500)
maximo_sp500 = max(dados$Sp500)
media_ibm = mean(dados$IBM)
mediana_ibm = median(dados$IBM)
desvio_padrao_ibm = sd(dados$IBM)
variancia_ibm = var(dados$IBM)
minimo_ibm = min(dados$IBM)
maximo_ibm = max(dados$IBM)
print("Medidas para o S&P 500:")
print(paste("Média:", round(media_sp500, 4)))
print(paste("Mediana:", round(mediana_sp500, 4)))
print(paste("Desvio Padrão:", round(desvio_padrao_sp500, 4)))
print(paste("Variância:", round(variancia_sp500, 4)))
print(paste("Mínimo:", round(minimo_sp500, 4)))
print(paste("Máximo:", round(maximo_sp500, 4)))
print("Medidas para a IBM:")
print(paste("Média:", round(media_ibm, 4)))
print(paste("Mediana:", round(mediana_ibm, 4)))
print(paste("Desvio Padrão:", round(desvio_padrao_ibm, 4)))
print(paste("Variância:", round(variancia_ibm, 4)))
print(paste("Mínimo:", round(minimo_ibm, 4)))
print(paste("Máximo:", round(maximo_ibm, 4)))
#Passo 6:
boxplot_grafico = ggplot(data = dados, aes(y = IBM, x = Sp500)) +
geom_boxplot() +
labs(x = "S&P 500", y = "IBM") +
ggtitle("Diagrama de Box Plot: S&P 500 e IBM")
print(boxplot_grafico)
library(ggplot2)
dados = data.frame(
Temperatura = c(100, 110, 120, 130, 140, 150, 160, 170, 180, 190),
Rendimento = c(45, 51, 54, 61, 66, 70, 74, 78, 85, 89)
)
#Passo 1:
grafico_dispersao = ggplot(dados, aes(x = Temperatura, y = Rendimento)) +
geom_point() + #pontos de dispersão
labs(x = "Temperatura (°C)", y = "Rendimento (%)") +
ggtitle("Diagrama de Dispersão de Temperatura vs. Rendimento")
print(grafico_dispersao)
#Passo 2:
modelo = lm(Rendimento ~ Temperatura, data = dados)
summary(modelo)
#Passo 3:
r_squared = summary(modelo)$r.squared
print(paste("Coeficiente de Determinação (R²):", round(r_squared, 4)))
#Passo 4:
temperatura_estimada = 155
rendimento_estimado = predict(modelo, newdata = data.frame(Temperatura = temperatura_estimada))
print(paste("Estimativa de Rendimento para", temperatura_estimada, "°C:", round(rendimento_estimado, 2)))
modelo = lm(Rendimento ~ Temperatura, data = dados)
summary(modelo)
#Passo 3:
r_squared = summary(modelo)$r.squared
print(paste("Coeficiente de Determinação (R²):", round(r_squared, 4)))
#Passo 4:
temperatura_estimada = 155
rendimento_estimado = predict(modelo, newdata = data.frame(Temperatura = temperatura_estimada))
print(paste("Estimativa de Rendimento para", temperatura_estimada, "°C:", round(rendimento_estimado, 2)))
dados = data.frame(
Temperatura = c(100, 110, 120, 130, 140, 150, 160, 170, 180, 190),
Rendimento = c(45, 51, 54, 61, 66, 70, 74, 78, 85, 89)
)
grafico_dispersao = ggplot(dados, aes(x = Temperatura, y = Rendimento)) +
geom_point() + #pontos de dispersão
labs(x = "Temperatura (°C)", y = "Rendimento (%)") +
ggtitle("Diagrama de Dispersão de Temperatura vs. Rendimento")
print(grafico_dispersao)
library(ggplot2)
dados = data.frame(
Temperatura = c(100, 110, 120, 130, 140, 150, 160, 170, 180, 190),
Rendimento = c(45, 51, 54, 61, 66, 70, 74, 78, 85, 89)
)
#Passo 1:
grafico_dispersao = ggplot(dados, aes(x = Temperatura, y = Rendimento)) +
geom_point() + #pontos de dispersão
labs(x = "Temperatura (°C)", y = "Rendimento (%)") +
ggtitle("Diagrama de Dispersão de Temperatura vs. Rendimento")
print(grafico_dispersao)
#Passo 2:
modelo = lm(Rendimento ~ Temperatura, data = dados)
summary(modelo)
#Passo 3:
r_squared = summary(modelo)$r.squared
print(paste("Coeficiente de Determinação (R²):", round(r_squared, 4)))
#Passo 4:
temperatura_estimada = 155
rendimento_estimado = predict(modelo, newdata = data.frame(Temperatura = temperatura_estimada))
print(paste("Estimativa de Rendimento para", temperatura_estimada, "°C:", round(rendimento_estimado, 2)))
grafico_dispersao = ggplot(dados, aes(x = Temperatura, y = Rendimento)) +
geom_point() + #pontos de dispersão
labs(x = "Temperatura (°C)", y = "Rendimento (%)") +
ggtitle("Diagrama de Dispersão de Temperatura vs. Rendimento")
print(grafico_dispersao)
grafico_dispersao = ggplot(dados, aes(x = trafego, y = velocidade)) +
geom_point() + #pontos de dispersão
labs(x = "Volume de Tráfego", y = "Velocidade Média") +
ggtitle("Diagrama de Dispersão de Volume de Tráfego vs. Velocidade Média")
print(grafico_dispersao)
dados = data.frame(
trafego = c(3,3,5,5,10,10,15,15,20,20,25,25,30,30),
velocidade = c(95.6, 93.8, 74.4, 74.4, 50.5, 51.5, 44.6, 42.6, 35.8, 38.7, 32.0, 32.0, 30.1, 29.1)
)
trafego = c(3,3,5,5,10,10,15,15,20,20,25,25,30,30)
velocidade = c(95.6, 93.8, 74.4, 74.4, 50.5, 51.5, 44.6, 42.6, 35.8, 38.7, 32.0, 32.0, 30.1, 29.1)
grafico_dispersao = ggplot(dados, aes(x = trafego, y = velocidade)) +
geom_point() + #pontos de dispersão
labs(x = "Volume de Tráfego", y = "Velocidade Média") +
ggtitle("Diagrama de Dispersão de Volume de Tráfego vs. Velocidade Média")
print(grafico_dispersao)
grafico_dispersao = ggplot(dados, aes(x = trafego, y = velocidade)) +
geom_point() + #pontos de dispersão
geom_abline() +
labs(x = "Volume de Tráfego", y = "Velocidade Média") +
ggtitle("Diagrama de Dispersão de Volume de Tráfego vs. Velocidade Média")
print(grafico_dispersao)
grafico_dispersao = ggplot(dados, aes(x = trafego, y = velocidade)) +
geom_abline() +
geom_point() + #pontos de dispersão
labs(x = "Volume de Tráfego", y = "Velocidade Média") +
ggtitle("Diagrama de Dispersão de Volume de Tráfego vs. Velocidade Média")
print(grafico_dispersao)
grafico_dispersao = ggplot(dados, aes(x = trafego, y = velocidade)) +
geom_hline() +
geom_point() + #pontos de dispersão
labs(x = "Volume de Tráfego", y = "Velocidade Média") +
ggtitle("Diagrama de Dispersão de Volume de Tráfego vs. Velocidade Média")
print(grafico_dispersao)
grafico_dispersao = ggplot(dados, aes(x = trafego, y = velocidade)) +
geom_abline() +
geom_point() + #pontos de dispersão
labs(x = "Volume de Tráfego", y = "Velocidade Média") +
ggtitle("Diagrama de Dispersão de Volume de Tráfego vs. Velocidade Média")
print(grafico_dispersao)
grafico_dispersao = ggplot(dados, aes(x = trafego, y = velocidade)) +
geom_smooth(method='lm') +
geom_point() + #pontos de dispersão
labs(x = "Volume de Tráfego", y = "Velocidade Média") +
ggtitle("Diagrama de Dispersão de Volume de Tráfego vs. Velocidade Média")
print(grafico_dispersao)
grafico_dispersao = ggplot(dados, aes(x = trafego, y = velocidade)) +
geom_quantile() +
geom_point() + #pontos de dispersão
labs(x = "Volume de Tráfego", y = "Velocidade Média") +
ggtitle("Diagrama de Dispersão de Volume de Tráfego vs. Velocidade Média")
print(grafico_dispersao)
grafico_dispersao = ggplot(dados, aes(x = trafego, y = velocidade)) +
geom_quantile() +
geom_point() + #pontos de dispersão
labs(x = "Volume de Tráfego", y = "Velocidade Média") +
ggtitle("Diagrama de Dispersão de Volume de Tráfego vs. Velocidade Média")
print(grafico_dispersao)
grafico_dispersao = ggplot(dados, aes(x = trafego, y = velocidade)) +
geom_abline(slope=3, intercept=15)
geom_point() + #pontos de dispersão
labs(x = "Volume de Tráfego", y = "Velocidade Média") +
ggtitle("Diagrama de Dispersão de Volume de Tráfego vs. Velocidade Média")
print(grafico_dispersao)
grafico_dispersao = ggplot(dados, aes(x = trafego, y = velocidade)) +
geom_abline(slope=3, intercept=15)
geom_point() + #pontos de dispersão
labs(x = "Volume de Tráfego", y = "Velocidade Média") +
ggtitle("Diagrama de Dispersão de Volume de Tráfego vs. Velocidade Média")
grafico_dispersao = ggplot(dados, aes(x = trafego, y = velocidade)) +
geom_abline(slope=3, intercept=15) +
geom_point() + #pontos de dispersão
labs(x = "Volume de Tráfego", y = "Velocidade Média") +
ggtitle("Diagrama de Dispersão de Volume de Tráfego vs. Velocidade Média")
print(grafico_dispersao)
grafico_dispersao = ggplot(dados, aes(x = trafego, y = velocidade)) +
geom_smooth(method='lm', se=FALSE) +
geom_point() + #pontos de dispersão
labs(x = "Volume de Tráfego", y = "Velocidade Média") +
ggtitle("Diagrama de Dispersão de Volume de Tráfego vs. Velocidade Média")
print(grafico_dispersao)
cor(dados)
cor(dados$trafego,dados$velocidade)
library(ggplot2)
dados = data.frame(
Temperatura = c(100, 110, 120, 130, 140, 150, 160, 170, 180, 190),
Rendimento = c(45, 51, 54, 61, 66, 70, 74, 78, 85, 89)
)
#Passo 1:
grafico_dispersao = ggplot(dados, aes(x = Temperatura, y = Rendimento)) +
geom_point() + #pontos de dispersão
labs(x = "Temperatura (°C)", y = "Rendimento (%)") +
ggtitle("Diagrama de Dispersão de Temperatura vs. Rendimento")
print(grafico_dispersao)
#Passo 2:
modelo = lm(Rendimento ~ Temperatura, data = dados)
summary(modelo)
#Passo 3:
r_squared = summary(modelo)$r.squared
print(paste("Coeficiente de Determinação (R²):", round(r_squared, 4)))
#Passo 4:
temperatura_estimada = 155
rendimento_estimado = predict(modelo, newdata = data.frame(Temperatura = temperatura_estimada))
print(paste("Estimativa de Rendimento para", temperatura_estimada, "°C:", round(rendimento_estimado, 2)))
library(ggplot2)
dados = data.frame(
Sp500 = c(1.2, -2.5, -3.0, 2.0, 5.0, 1.2, 3.0, -1.0, 0.5, 2.5),
IBM = c(-0.7, -2.0, -5.5, 4.7, 1.8, 4.1, 2.6, 2.0, -1.3, 5.5)
)
#Passo 1:
grafico_dispersao = ggplot(data = dados, aes(x = Sp500, y = IBM)) +
geom_point() +
labs(x = "S&P 500", y = "IBM") +
ggtitle("Gráfico de Dispersão: S&P 500 x IBM")
print(grafico_dispersao)
#Passo 2:
modelo_regressao = lm(IBM ~ Sp500, data = dados)
summary(modelo_regressao)
#Passo 3:
modelo_regressao = lm(IBM ~ Sp500, data = dados)
resumo = summary(modelo_regressao)
r_squared = resumo$r.squared
print(paste("Coeficiente de Determinação (R²):", round(r_squared, 4)))
#Passo 4:
correlacao = cor(dados$Sp500, dados$IBM)
print(paste("Coeficiente de Correlação (r):", round(correlacao, 4)))
#Passo 5:
media_sp500 = mean(dados$Sp500)
mediana_sp500 = median(dados$Sp500)
desvio_padrao_sp500 = sd(dados$Sp500)
variancia_sp500 = var(dados$Sp500)
minimo_sp500 = min(dados$Sp500)
maximo_sp500 = max(dados$Sp500)
media_ibm = mean(dados$IBM)
mediana_ibm = median(dados$IBM)
desvio_padrao_ibm = sd(dados$IBM)
variancia_ibm = var(dados$IBM)
minimo_ibm = min(dados$IBM)
maximo_ibm = max(dados$IBM)
print("Medidas para o S&P 500:")
print(paste("Média:", round(media_sp500, 4)))
print(paste("Mediana:", round(mediana_sp500, 4)))
print(paste("Desvio Padrão:", round(desvio_padrao_sp500, 4)))
print(paste("Variância:", round(variancia_sp500, 4)))
print(paste("Mínimo:", round(minimo_sp500, 4)))
print(paste("Máximo:", round(maximo_sp500, 4)))
print("Medidas para a IBM:")
print(paste("Média:", round(media_ibm, 4)))
print(paste("Mediana:", round(mediana_ibm, 4)))
print(paste("Desvio Padrão:", round(desvio_padrao_ibm, 4)))
print(paste("Variância:", round(variancia_ibm, 4)))
print(paste("Mínimo:", round(minimo_ibm, 4)))
print(paste("Máximo:", round(maximo_ibm, 4)))
#Passo 6:
boxplot_grafico = ggplot(data = dados, aes(y = IBM, x = Sp500)) +
geom_boxplot() +
labs(x = "S&P 500", y = "IBM") +
ggtitle("Diagrama de Box Plot: S&P 500 e IBM")
print(boxplot_grafico)
trafego = c(3,3,5,5,10,10,15,15,20,20,25,25,30,30)
velocidade = c(95.6, 93.8, 74.4, 74.4, 50.5, 51.5, 44.6, 42.6, 35.8, 38.7, 32.0, 32.0, 30.1, 29.1)
plot(trafego, velocidade)
abline(lm(velocidade ~ trafego))
dados = data.frame(
trafego = c(3,3,5,5,10,10,15,15,20,20,25,25,30,30),
velocidade = c(95.6, 93.8, 74.4, 74.4, 50.5, 51.5, 44.6, 42.6, 35.8, 38.7, 32.0, 32.0, 30.1, 29.1)
)
#Passo 1 e 2:
grafico_dispersao = ggplot(dados, aes(x = trafego, y = velocidade)) +
geom_smooth(method='lm', se=FALSE) +
geom_point() + #pontos de dispersão
labs(x = "Volume de Tráfego", y = "Velocidade Média") +
ggtitle("Diagrama de Dispersão de Volume de Tráfego vs. Velocidade Média")
library(ggplot2)
trafego = c(3,3,5,5,10,10,15,15,20,20,25,25,30,30)
velocidade = c(95.6, 93.8, 74.4, 74.4, 50.5, 51.5, 44.6, 42.6, 35.8, 38.7, 32.0, 32.0, 30.1, 29.1)
plot(trafego, velocidade)
abline(lm(velocidade ~ trafego))
dados = data.frame(
trafego = c(3,3,5,5,10,10,15,15,20,20,25,25,30,30),
velocidade = c(95.6, 93.8, 74.4, 74.4, 50.5, 51.5, 44.6, 42.6, 35.8, 38.7, 32.0, 32.0, 30.1, 29.1)
)
grafico_dispersao = ggplot(dados, aes(x = trafego, y = velocidade)) +
geom_smooth(method='lm', se=FALSE) +
geom_point() + #pontos de dispersão
labs(x = "Volume de Tráfego", y = "Velocidade Média") +
ggtitle("Diagrama de Dispersão de Volume de Tráfego vs. Velocidade Média")
library(ggplot2)
trafego = c(3,3,5,5,10,10,15,15,20,20,25,25,30,30)
velocidade = c(95.6, 93.8, 74.4, 74.4, 50.5, 51.5, 44.6, 42.6, 35.8, 38.7, 32.0, 32.0, 30.1, 29.1)
plot(trafego, velocidade)
abline(lm(velocidade ~ trafego))
dados = data.frame(
trafego = c(3,3,5,5,10,10,15,15,20,20,25,25,30,30),
velocidade = c(95.6, 93.8, 74.4, 74.4, 50.5, 51.5, 44.6, 42.6, 35.8, 38.7, 32.0, 32.0, 30.1, 29.1)
)
#Passo 1 e 2:
grafico_dispersao = ggplot(dados, aes(x = trafego, y = velocidade)) +
geom_smooth(method='lm', se=FALSE) +
geom_point() + #pontos de dispersão
labs(x = "Volume de Tráfego", y = "Velocidade Média") +
ggtitle("Diagrama de Dispersão de Volume de Tráfego vs. Velocidade Média")
print(grafico_dispersao)
#Passo 3:
cor(dados$trafego,dados$velocidade)
#Passo 4:
#TODO
